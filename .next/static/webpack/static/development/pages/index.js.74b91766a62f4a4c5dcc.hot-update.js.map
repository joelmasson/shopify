{"version":3,"file":"static/webpack/static/development/pages/index.js.74b91766a62f4a4c5dcc.hot-update.js","sources":["webpack:///./components/ResourceList.js"],"sourcesContent":["import gql from 'graphql-tag';\nimport {Query} from 'react-apollo';\nimport {Card,ResourceList,Stack,TextStyle,Thumbnail} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport * as PropTypes from 'prop-types';\n\nconst GET_PRODUCTS_BY_ID = gql `\n  query getProducts($id: [ID!]!) {\n    nodes(ids: $id) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    state = {\n        item: '',\n    };\n    static contextTypes = {\n        polaris: PropTypes.object\n    };\n  redirectToProduct = () => {\n    const redirect = Redirect.create(this.context.polaris.appBridge);\n    redirect.dispatch(\n      Redirect.Action.APP,\n      '/edit-products'\n    );\n  };\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ids: store.get('ids')}}>\n        {({data, loading, error}) => {\n          if (loading) return <div>Loadingâ€¦</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          return (\n            <Card>\n            <ResourceList\n              showHeader\n              resourceName={{ singular: 'Product', plural: 'Products' }}\n              items={data.nodes}\n              renderItem={item => {\n                const media = (\n                  <Thumbnail\n                    source={\n                      item.images.edges[0]\n                        ? item.images.edges[0].node.originalSrc\n                        : ''\n                    }\n                    alt={\n                      item.images.edges[0]\n                        ? item.images.edges[0].node.altText\n                        : ''\n                    }\n                  />\n                );\n                const price = item.variants.edges[0].node.price;\n                return (\n                  <ResourceList.Item\n                    id={item.id}\n                    media={media}\n                    accessibilityLabel={`View details for ${item.title}`}\n                    onClick={() => {\n                        store.set('item',item);\n                        this.redirectToProduct();\n                    }}\n                  >\n                    <Stack>\n                      <Stack.Item fill>\n                        <h3>\n                          <TextStyle variation=\"strong\">\n                            {item.title}\n                          </TextStyle>\n                        </h3>\n                      </Stack.Item>\n                      <Stack.Item>\n                        <p>${price}</p>\n                      </Stack.Item>\n                      <Stack.Item>\n                        <p>Expires on {twoWeeksFromNow} </p>\n                      </Stack.Item>\n                    </Stack>\n                  </ResourceList.Item>\n                );\n              }}\n            />\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ResourceListWithProducts;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA4BA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAKA;AACA;AACA;AAIA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AANA;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;AAUA;AAAA;AAEA;AAAA;AAcA;AA/CA;AAmDA;AAGA;;;;AA9EA;AACA;AADA;AAKA;AADA;AACA;AA4EA;;;;A","sourceRoot":""}